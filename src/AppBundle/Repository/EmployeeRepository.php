<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * EmployeeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeeRepository extends \Doctrine\ORM\EntityRepository
{
    public function filterAllEmployees()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT e.firstname, e.lastname, e.nationality, e.age, e.gender, e.languages
            FROM AppBundle:Employee e
            JOIN AppBundle:Newbie n WITH abs(e.age-n.age)<:age AND e.nationality = n.nationality AND e.gender = n.gender AND e.languages=n.languages'
            )->setParameter('age', 5)
            ->getResult();
    }

    public function filterByEmployee($age, $nationality, $languages, $gender) {

        $matchingCondition = ' ';
        $flag = 0;

        if($nationality == false && $age == false && $gender == false && $languages ==false) {
            echo "All are empty";
        }

        if ($age == true) {
            $matchingCondition .= ' abs(e.age-n.age) <= 5 ';
            $flag++;
        }

        if ($nationality == true) {
            if($flag == 0) $matchingCondition .= ' e.nationality = n.nationality ';
            else $matchingCondition .= ' AND e.nationality = n.nationality';
            $flag++;
        }

        if ($gender == true) {
            if($flag == 0) $matchingCondition .= ' e.gender = n.gender ';
            else $matchingCondition .= ' AND e.gender = n.gender ';
            $flag++;
        }

        if ($languages == true){
            if($flag == 0) $matchingCondition .= ' n.languages = e.languages ';
            else $matchingCondition .= ' AND n.languages = e.languages ';
        }

        //With getResult() we get the distinct number of the matches, so one match for the available employees
        //With getArrayResult() we get all the possible results for a single Newbie
        $qb =$this->createQueryBuilder('e')
            ->select('e')
            ->join('AppBundle:Newbie', 'n', 'WITH', $matchingCondition )
            ->getQuery()
            ->getResult();

        return $qb;
    }
}
