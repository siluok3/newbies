<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * EmployeeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeeRepository extends \Doctrine\ORM\EntityRepository
{
    public function filterAllEmployees()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT e.firstname, e.lastname, e.nationality, e.age, e.gender, e.languages
            FROM AppBundle:Employee e
            JOIN AppBundle:Newbie n WITH abs(e.age-n.age)<:age AND e.nationality = n.nationality AND e.gender = n.gender AND e.languages=n.languages'
            )->setParameter('age', 5)
            ->getResult();
    }

    public function filterJoinedEmployee($age, $nationality, $languages, $gender)
    {
        $matchingCondition = ' ';
        $and = ' AND ';
        $flag = 0;

        if($age == true)
        {
            $matchingCondition .= ' abs(e.age-n.age) <= 5 ';
            $flag++;
        }

        if($nationality == true)
        {
            $condition = ' e.nationality = n.nationality ';
            if($flag == 0) $matchingCondition .= $condition;
            else $matchingCondition .= $and . $condition;
            $flag++;
        }

        if($gender == true)
        {
            $condition = ' e.gender = n.gender ';
            if($flag == 0) $matchingCondition .= $condition;
            else $matchingCondition .= $and . $condition;
            $flag++;
        }

        if($languages == true)
        {
            $condition = ' n.languages = e.languages';
            if($flag == 0) $matchingCondition .= $condition;
            else $matchingCondition .= $and . $condition;
        }

        $qb =$this->createQueryBuilder('e')
            ->select('e,n')
            ->leftJoin('AppBundle:Newbie', 'n', 'WITH', $matchingCondition )
            //->groupBy('e.id')
            ->getQuery()
            ->execute();

        return $qb;
    }
}
